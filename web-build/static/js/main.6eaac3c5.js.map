{"version":3,"file":"static/js/main.6eaac3c5.js","mappings":"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","sources":["firebase.js","Pages/LoginPage.js","Pages/BrowsePage.js","Pages/ProfilePage.js","Pages/PoseDetection.js","Pages/HistoryPage.js","Pages/HomePage.js","Pages/Exercises/SquatDetection.js","Pages/Exercises/PlankDetection.js","Pages/Exercises/JumpingJackDetection.js","Pages/Exercises/PushUpDetection.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore';\r\n\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBsxO6b9xJDcv0fRYL8DXPGRAjD6Xb87m8\",\r\n    authDomain: \"depfit-311ae.firebaseapp.com\",\r\n    projectId: \"depfit-311ae\",\r\n    storageBucket: \"depfit-311ae.appspot.com\",\r\n    messagingSenderId: \"938565214214\",\r\n    appId: \"1:938565214214:web:4eb97e8e3483a865882387\",\r\n    measurementId: \"G-NQ17D55NWM\"\r\n};\r\n\r\n\r\n// Use this to initialize the firebase App\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\n// Use these for db & auth\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\n\r\nexport { auth, db };","import React, { useEffect, useState } from \"react\";\r\nimport { KeyboardAvoidingView, StyleSheet, Text, TextInput, TouchableOpacity, View, ImageBackground, Image } from \"react-native\";\r\nimport { auth } from '../firebase';\r\nimport { useNavigation } from \"@react-navigation/core\";\r\nimport HomePageLogo from '../assets/HomePageLogo.png';\r\nimport '../App.css';\r\n\r\n// Function to sanitize user input by removing dangerous characters\r\nconst sanitizeInput = (input) => {\r\n    // Regular expression to remove dangerous characters\r\n    const sanitizedInput = input.replace(/[<>]/g, '');\r\n    return sanitizedInput;\r\n}\r\n\r\nconst MAX_LOGIN_ATTEMPTS = 3; // Max number of login attempts allowed\r\nconst LOGIN_TIMEOUT_DURATION = 60 * 1000; // Timeout duration (1 minute)\r\nlet loginAttempts = 0;\r\nlet lastLoginAttemptTime = 0;\r\n\r\nconst LoginPage = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loginError, setLoginError] = useState('');\r\n    const [showLogin, setShowLogin] = useState(false);\r\n\r\n    const navigation = useNavigation();\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            if (user) {\r\n                if (user.emailVerified) {\r\n                    navigation.navigate(\"Home\");\r\n                } else {\r\n                    setLoginError(\"Email not verified. Please verify your email before logging in.\");\r\n                }\r\n            }\r\n        });\r\n\r\n        return unsubscribe;\r\n    }, []);\r\n\r\n    const handleEnter = () => {\r\n        setShowLogin(true);  // Hide the initial view and show the login form\r\n    };\r\n\r\n    const handleRegister = () => {\r\n        // Sanitize email and password inputs\r\n        const sanitizedEmail = sanitizeInput(email);\r\n        const sanitizedPassword = sanitizeInput(password);\r\n\r\n        // Password requirements\r\n        const minLength = 8;\r\n        const hasUpperCase = /[A-Z]/.test(sanitizedPassword);\r\n        const hasLowerCase = /[a-z]/.test(sanitizedPassword);\r\n        const hasNumbers = /\\d/.test(sanitizedPassword);\r\n        const hasSpecialChars = /[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]/.test(sanitizedPassword);\r\n\r\n        // Check if password meets requirements\r\n        if (\r\n            sanitizedPassword.length < minLength ||\r\n            !hasUpperCase ||\r\n            !hasLowerCase ||\r\n            !hasNumbers ||\r\n            !hasSpecialChars\r\n        ) {\r\n            alert(\"Password must be at least 8 characters long and include at least one uppercase letter, one lowercase letter, one number, and one special character.\");\r\n            return;\r\n        }\r\n\r\n        // If password meets complexity requirements, proceed with registration\r\n        auth.createUserWithEmailAndPassword(sanitizedEmail, sanitizedPassword)\r\n            .then(userCredentials => {\r\n                // Send verification email\r\n                userCredentials.user.sendEmailVerification()\r\n                    .then(() => {\r\n                        alert(\"Verification email sent. Please verify your email before logging in.\");\r\n                    })\r\n                    .catch(error => {\r\n                        console.error(\"Error sending verification email:\", error);\r\n                    });\r\n            })\r\n            .catch(error => alert(error.message));\r\n    };\r\n\r\n    const handleLogin = () => {\r\n        // Sanitize email and password inputs\r\n        const sanitizedEmail = sanitizeInput(email);\r\n        const sanitizedPassword = sanitizeInput(password);\r\n\r\n        // Check if login attempts have exceeded the maximum limit\r\n        if (loginAttempts >= MAX_LOGIN_ATTEMPTS && Date.now() - lastLoginAttemptTime < LOGIN_TIMEOUT_DURATION) {\r\n            // Update error message each second\r\n            const intervalId = setInterval(() => {\r\n                const remainingTime = Math.ceil((lastLoginAttemptTime + LOGIN_TIMEOUT_DURATION - Date.now()) / 1000); // Convert milliseconds to seconds\r\n                if (remainingTime <= 0) {\r\n                    // Clear interval when timeout is over\r\n                    clearInterval(intervalId);\r\n                    setLoginError('');\r\n                } else {\r\n                    setLoginError(`Too many login attempts. Please try again in ${remainingTime} seconds.`);\r\n                }\r\n            }, 1000);\r\n            return;\r\n        }\r\n\r\n        // Attempt login if email is verified\r\n        auth.signInWithEmailAndPassword(sanitizedEmail, sanitizedPassword)\r\n            .then(userCredentials => {\r\n                const user = userCredentials.user;\r\n                if (user.emailVerified) {\r\n                    console.log(\"Logged in with: \", user.email);\r\n                    // Reset login attempts if login is successful\r\n                    loginAttempts = 0;\r\n                    setLoginError('');\r\n                    navigation.navigate(\"Home\");\r\n                } else {\r\n                    setLoginError(\"Email not verified. Please verify your email before logging in.\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                // Increment login attempts and update last login attempt time\r\n                loginAttempts++;\r\n                lastLoginAttemptTime = Date.now();\r\n                setLoginError(error.message);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <ImageBackground\r\n            source={require('../assets/Background2.jpg')}\r\n            style={styles.backgroundImage}\r\n            resizeMode=\"cover\"\r\n        >\r\n            <KeyboardAvoidingView style={styles.container} behavior=\"padding\">\r\n                {!showLogin ? (\r\n                    <View style={styles.welcomeContainer}>\r\n                        <TouchableOpacity onPress={handleEnter} style={[styles.imageButton]}>\r\n                            <Image source={HomePageLogo} style={styles.logo} resizeMode=\"contain\" />\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity onPress={handleEnter} style={styles.button}>\r\n                            <Text style={styles.buttonText}>Enter</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                ) : (\r\n                    <View style={styles.inputContainer}>\r\n                        <TextInput\r\n                            placeholder=\"Email\"\r\n                            value={email}\r\n                            onChangeText={setEmail}\r\n                            style={styles.input}\r\n                        />\r\n                        <TextInput\r\n                            placeholder=\"Password\"\r\n                            value={password}\r\n                            onChangeText={setPassword}\r\n                            style={styles.input}\r\n                            secureTextEntry\r\n                        />\r\n                        {loginError ? <Text style={styles.errorText}>{loginError}</Text> : null}\r\n                        <View style={styles.buttonContainer}>\r\n                            <TouchableOpacity onPress={handleLogin} style={styles.button}>\r\n                                <Text style={styles.buttonText}>Login</Text>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity onPress={handleRegister} style={styles.button}>\r\n                                <Text style={styles.buttonText}>Register</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                )}\r\n            </KeyboardAvoidingView>\r\n        </ImageBackground>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n\r\nconst styles = StyleSheet.create({\r\n    backgroundImage: {\r\n        flex: 1,\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    logo: {\r\n        width: 200,\r\n        height: 200,\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    welcomeContainer: {\r\n        alignItems: 'center',\r\n        padding: 20,\r\n        borderRadius: 10,\r\n        width: 200,\r\n        height: 200,\r\n    },\r\n    imageButton: {\r\n        marginBottom: 20,\r\n    },\r\n    welcomeText: {\r\n        fontSize: 24,\r\n        alignItems: 'center',\r\n        color: 'white',\r\n        marginBottom: 20,\r\n        shadowColor: '#000',\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n        elevation: 5,\r\n    },\r\n    enterButton: {\r\n        backgroundColor: '#3498db',\r\n        padding: 10,\r\n        borderRadius: 5,\r\n    },\r\n    inputContainer: {\r\n        width: '80%',\r\n    },\r\n    input: {\r\n        backgroundColor: '#f5f5f5',\r\n        padding: 10,\r\n        marginBottom: 10,\r\n        borderRadius: 5,\r\n    },\r\n    buttonContainer: {\r\n        width: '60%',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n    },\r\n    button: {\r\n        backgroundColor: '#3498db',\r\n        padding: 15,\r\n        borderRadius: 10,\r\n        alignItems: 'center',\r\n        marginBottom: 15,\r\n    },\r\n    buttonText: {\r\n        color: '#fff',\r\n        fontSize: 18, // Adjust the font size as needed\r\n        fontFamily: 'Arial', // Change the font family to your preferred font\r\n        textShadowColor: 'rgba(0, 0, 0, 0.75)', // Add a text shadow for better visibility\r\n        textShadowOffset: { width: 1, height: 1 },\r\n        textShadowRadius: 3,\r\n    },\r\n    errorText: {\r\n        color: 'red',\r\n        marginBottom: 10,\r\n    },\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport { View, TextInput, Button, Text, FlatList, StyleSheet, Alert, Modal, TouchableOpacity, Image, ScrollView, ImageBackground } from 'react-native';\r\nimport '../App.css';\r\n\r\nconst BrowsePage = () => {\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [selectedExercise, setSelectedExercise] = useState(null);\r\n\r\n    const bodyParts = [\"back\", \"chest\", \"upper legs\", \"lower legs\", \"shoulders\"]; // Reduced to 4 suggestions\r\n\r\n    useEffect(() => {\r\n        fetchExercises();\r\n    }, []);\r\n\r\n    const fetchExercises = async (bodyPart = '') => {\r\n        const url = bodyPart\r\n            ? `https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}?limit=10`\r\n            : 'https://exercisedb.p.rapidapi.com/exercises';\r\n        const options = {\r\n            method: 'GET',\r\n            headers: {\r\n                'X-RapidAPI-Key': '96851120ccmshb39b41e6b1c0264p146630jsn5de326583dfe',\r\n                'X-RapidAPI-Host': 'exercisedb.p.rapidapi.com'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(url, options);\r\n            if (!response.ok) {\r\n                throw new Error('API call failed with status ' + response.status);\r\n            }\r\n            const result = await response.json();\r\n            setSearchResults(result);\r\n        } catch (error) {\r\n            console.error('Fetch Exercises Error:', error);\r\n            Alert.alert('Error', 'Something went wrong with the search.');\r\n        }\r\n    };\r\n\r\n    const searchExercise = () => {\r\n        if (!searchQuery) {\r\n            fetchExercises();\r\n        } else {\r\n            fetchExercises(searchQuery);\r\n        }\r\n    };\r\n\r\n    const handleSelectExercise = (exercise) => {\r\n        if (exercise) {\r\n            setSelectedExercise(exercise);\r\n        }\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setSelectedExercise(null);\r\n    };\r\n\r\n    const renderItem = ({ item }) => (\r\n        <ImageBackground\r\n            source={require('../assets/BlackBackground.png')}\r\n            className=\"backgroundImage\"\r\n            resizeMode=\"cover\"\r\n            style={styles.container}\r\n        >\r\n        <TouchableOpacity style={styles.itemContainer} onPress={() => handleSelectExercise(item)}>\r\n            <Image style={styles.itemImage} source={{ uri: item.gifUrl }} />\r\n            <Text style={styles.itemName}>{item.name}</Text>\r\n            <Text style={styles.itemDetails}>Equipment: {item.equipment}</Text>\r\n            <Text numberOfLines={1} style={styles.itemDetails}>Instructions: {item.instructions?.join(\" \")}</Text>\r\n        </TouchableOpacity>\r\n        </ImageBackground>\r\n    );\r\n\r\n    const renderBodyPartButton = ({ item }) => (\r\n        \r\n        <TouchableOpacity style={styles.suggestionButton} onPress={() => fetchExercises(item)}>\r\n            <Text style={styles.suggestionText}>{item}</Text>\r\n        </TouchableOpacity>\r\n    );\r\n\r\n    return (\r\n        <ImageBackground\r\n            source={require('../assets/BlackBackground.png')}\r\n            className=\"backgroundImage\"\r\n            resizeMode=\"cover\"\r\n            style={styles.container}\r\n        >\r\n            <TextInput\r\n                style={styles.searchInput}\r\n                onChangeText={setSearchQuery}\r\n                value={searchQuery}\r\n                placeholder=\"Type name of body part...\"\r\n            />\r\n            <Button\r\n                title=\"Search\"\r\n                onPress={searchExercise}\r\n            />\r\n            <FlatList\r\n                horizontal\r\n                data={bodyParts}\r\n                renderItem={renderBodyPartButton}\r\n                keyExtractor={(item, index) => index.toString()}\r\n                contentContainerStyle={styles.suggestionsContainer}\r\n            />\r\n            <FlatList\r\n                data={searchResults}\r\n                renderItem={renderItem}\r\n                keyExtractor={(item) => item.id.toString()}\r\n            />\r\n            <Modal\r\n    animationType=\"slide\"\r\n    transparent={true}\r\n    visible={selectedExercise !== null}\r\n    onRequestClose={handleCloseModal}\r\n>\r\n    <View style={styles.centeredView}>\r\n        <View style={styles.modalView}>\r\n            {selectedExercise && (\r\n                <>\r\n                    <Image source={{ uri: selectedExercise.gifUrl }} style={styles.modalImage} />\r\n                    <Text style={styles.modalTitle}>{selectedExercise.name}</Text>\r\n                    <Text style={styles.modalText}>Equipment: {selectedExercise.equipment}</Text>\r\n                    <Text style={styles.modalText}>Target Muscle: {selectedExercise.target}</Text>\r\n                    <Text style={styles.modalText}>Body Part: {selectedExercise.bodyPart}</Text>\r\n                    <Text style={styles.modalText}>Instructions: {selectedExercise.instructions?.join(\" \")}</Text>\r\n                    <Button title=\"Close\" onPress={handleCloseModal} />\r\n                </>\r\n            )}\r\n        </View>\r\n    </View>\r\n</Modal>\r\n        </ImageBackground>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        marginTop: 30,\r\n    },\r\n    searchInput: {\r\n        backgroundColor: '#e0e0e0',\r\n        margin: 12,\r\n        borderWidth: 1,\r\n        padding: 10,\r\n        borderRadius: 5,\r\n    },\r\n    itemContainer: {\r\n        backgroundColor: '#e0e0e0',\r\n        padding: 20,\r\n        marginVertical: 8,\r\n        marginHorizontal: 16,\r\n    },\r\n    itemName: {\r\n        fontSize: 18,\r\n    },\r\n    itemDetails: {\r\n        fontSize: 14,\r\n    },\r\n    itemImage: {\r\n        justifyContent: 'center',\r\n        width: 100,\r\n        height: 100,\r\n    },\r\n    suggestionsContainer: {\r\n        flexDirection: 'row',\r\n        paddingHorizontal: 10,\r\n        marginTop: 10,\r\n        marginBottom: 70,\r\n    },\r\n    suggestionButton: {\r\n        backgroundColor: '#e0e0e0',\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 15,\r\n        borderRadius: 5,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    suggestionText: {\r\n        fontSize: 15,\r\n        color: '#333',\r\n    },\r\n    centeredView: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginTop: 22\r\n    },\r\n    modalView: {\r\n        margin: 20,\r\n        backgroundColor: \"white\",\r\n        borderRadius: 20,\r\n        padding: 35,\r\n        alignItems: \"center\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4,\r\n        elevation: 5\r\n    },\r\n    modalImage: {\r\n        width: 300,\r\n        height: 300,\r\n        marginBottom: 20,\r\n    },\r\n    modalText: {\r\n        marginBottom: 15,\r\n        textAlign: \"center\"\r\n    }\r\n});\r\n\r\nexport default BrowsePage;","import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport { auth, db } from '../firebase';\r\nimport { collection, query, where, getDocs } from 'firebase/firestore';\r\nimport { ImageBackground } from 'react-native';\r\nimport { BarChart } from 'react-native-chart-kit';\r\nimport '../App.css';\r\n\r\nconst ProfilePage = () => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [totalSquats, setTotalSquats] = useState(0);\r\n    const [totalJumpingJacks, setTotalJumpingJacks] = useState(0);\r\n    const [totalPushUps, setTotalPushUps] = useState(0);\r\n    const [totalPlanks, setTotalPlanks] = useState(0);\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const progressInterval = setInterval(() => {\r\n            setProgress(prevProgress => prevProgress < 1 ? prevProgress + 0.1 : 1);\r\n        }, 1000);\r\n\r\n        const fetchWorkoutTotals = async (collectionName, setter, countField) => {\r\n            if (auth.currentUser) {\r\n                const userEmail = auth.currentUser.email.toLowerCase();\r\n                const ref = collection(db, collectionName);\r\n                const q = query(ref, where('userEmail', '==', userEmail));\r\n\r\n                try {\r\n                    const querySnapshot = await getDocs(q);\r\n                    let total = 0;\r\n                    querySnapshot.forEach(doc => {\r\n                        total += doc.data()[countField] || 0;\r\n                    });\r\n                    setter(total);\r\n                    console.log(`Total ${collectionName}:`, total);\r\n                } catch (error) {\r\n                    console.error(`Error fetching ${collectionName}:`, error);\r\n                }\r\n            }\r\n        };\r\n\r\n        const authListener = auth.onAuthStateChanged(user => {\r\n            setLoggedIn(!!user);\r\n            if (user) {\r\n                fetchWorkoutTotals('squatSessions', setTotalSquats, 'squatCount');\r\n                fetchWorkoutTotals('jumpingJackSessions', setTotalJumpingJacks, 'jumpingJackCount');\r\n                fetchWorkoutTotals('pushUpSessions', setTotalPushUps, 'pushUpCount');\r\n                fetchWorkoutTotals('plankSessions', setTotalPlanks, 'plankTime'); \r\n            }\r\n        });\r\n\r\n        return () => {\r\n            clearInterval(progressInterval);\r\n            authListener(); // Unsubscribe from the auth state listener\r\n        };\r\n    }, []);\r\n\r\n    const data = {\r\n        labels: ['Squats', 'Jumping Jacks', 'Push Ups', 'Planks'],\r\n        datasets: [{\r\n            data: [totalSquats, totalJumpingJacks, totalPushUps, totalPlanks],\r\n        }],\r\n    };\r\n\r\n    return (\r\n        <ImageBackground\r\n            source={require('../assets/BlackBackground.png')}\r\n            className=\"backgroundImage\"\r\n            resizeMode=\"cover\"\r\n            style={styles.backgroundImage}\r\n        >\r\n            <View style={styles.container}>\r\n\r\n                {loggedIn && (\r\n                    <>\r\n                        <Text style={styles.emailText}>Email: {auth.currentUser?.email}</Text>\r\n                        <View style={styles.titleContainer}>\r\n                            <Text style={styles.titleText}>Overall Score</Text>\r\n                        </View>\r\n                        <Text style={styles.totalText}>Total Squats: {totalSquats}</Text>\r\n                        <Text style={styles.totalText}>Total Jumping Jacks: {totalJumpingJacks}</Text>\r\n                        <Text style={styles.totalText}>Total Push Ups: {totalPushUps}</Text>\r\n                        <Text style={styles.totalText}>Total seconds doing plank: {totalPlanks}</Text>\r\n                        <BarChart\r\n                            data={data}\r\n                            width={300}\r\n                            height={200}\r\n                            yAxisSuffix=\"\"\r\n                            chartConfig={{\r\n                                backgroundGradientFrom: '#1E2923',\r\n                                backgroundGradientTo: '#08130D',\r\n                                color: (opacity = 1) => `rgba(26, 255, 146, ${opacity})`,\r\n                                strokeWidth: 2, // optional, default 3\r\n                                barPercentage: 0.5,\r\n                                useShadowColorFromDataset: false // optional\r\n                            }}\r\n                            style={styles.chart}\r\n                        />\r\n                    </>\r\n                )}\r\n            </View>\r\n        </ImageBackground>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        paddingHorizontal: 20,\r\n    },\r\n    backgroundImage: {\r\n        flex: 1,\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    titleContainer: {\r\n        backgroundColor: '#3498db',\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 20,\r\n        borderRadius: 10,\r\n        marginBottom: 20,\r\n    },\r\n    titleText: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        color: '#fff',\r\n    },\r\n    emailText: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        marginBottom: 10,\r\n        color: '#fff',\r\n    },\r\n    progressBar: {\r\n        marginVertical: 20,\r\n    },\r\n    totalText: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        marginTop: 10,\r\n        color: '#fff',\r\n    },\r\n    chart: {\r\n        marginTop: 20,\r\n    },\r\n});\r\n\r\nexport default ProfilePage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ScrollView, View, Text, Image, TouchableOpacity, StyleSheet, Dimensions, ImageBackground } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport SquatLogo from '../assets/Squat.png'; // Make sure to adjust your import paths\r\nimport JumpingJack from '../assets/JumpingJack.png'; // Make sure to adjust your import paths\r\nimport Plank from '../assets/Plank.png'; // Make sure to adjust your import paths\r\nimport PushUp from '../assets/PushUp.png'; // Make sure to adjust your import paths\r\n\r\nfunction PoseDetection() {\r\n  const navigation = useNavigation();\r\n  const [screenWidth, setScreenWidth] = useState(Dimensions.get('window').width);\r\n\r\n  useEffect(() => {\r\n    const updateLayout = () => {\r\n      setScreenWidth(Dimensions.get('window').width);\r\n    };\r\n\r\n    Dimensions.addEventListener('change', updateLayout);\r\n    return () => Dimensions.removeEventListener('change', updateLayout);\r\n  }, []);\r\n\r\n  const cardWidth = screenWidth / 2 - 100; // Adjusting for two cards per row with some padding\r\n\r\n  const navigateToSquatCounter = () => {\r\n    navigation.navigate('SquatDetection'); // Update with correct navigation if needed\r\n  };\r\n\r\n  const navigateToPushUpCounter = () => {\r\n    navigation.navigate('PushUpDetection');\r\n  };\r\n\r\n  const navigateToJumpingJackCounter = () => {\r\n    navigation.navigate('JumpingJackDetection');\r\n  };\r\n\r\n  const navigateToPlankTracker = () => {\r\n    navigation.navigate('PlankDetection');\r\n  };\r\n\r\n  return (\r\n    <ImageBackground\r\n            source={require('../assets/BlackBackground.png')}\r\n            style={styles.backgroundImage}\r\n            resizeMode=\"cover\"\r\n        >\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>Choose your Exercise!</Text>\r\n      </View>\r\n      <ScrollView contentContainerStyle={styles.cardContainer}>\r\n        <TouchableOpacity style={[styles.card, { width: cardWidth }]} onPress={navigateToSquatCounter}>\r\n          <Image source={SquatLogo} style={styles.image} />\r\n          <Text>Squats</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={[styles.card, { width: cardWidth }]} onPress={navigateToPushUpCounter}>\r\n          <Image source={PushUp} style={styles.image} />\r\n          <Text>Push-Ups</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={[styles.card, { width: cardWidth }]} onPress={navigateToJumpingJackCounter}>\r\n          <Image source={JumpingJack} style={styles.image} />\r\n          <Text>Jumping Jacks</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={[styles.card, { width: cardWidth }]} onPress={navigateToPlankTracker}>\r\n          <Image source={Plank} style={styles.image} />\r\n          <Text>Plank</Text>\r\n        </TouchableOpacity>\r\n        </ScrollView>\r\n    </View>\r\n    </ImageBackground>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n\r\n  },\r\n  backgroundImage: {\r\n    flex: 1,\r\n    width: '100%',\r\n    height: '100%', // Ensure it covers the full height\r\n  },\r\n  \r\n  header: {\r\n    padding: 20,\r\n    backgroundColor: 'black',\r\n  },\r\n  title: {\r\n    fontWeight: 'bold',\r\n    fontSize: 20,\r\n    color: '#e0e0e0',\r\n  },\r\n  cardContainer: {\r\n    flexDirection: 'row', // Align items in a row\r\n    flexWrap: 'wrap', // Allow items to wrap to the next line\r\n    justifyContent: 'center', // Center items in the main axis\r\n    padding: 10,\r\n  },\r\n  card: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    margin: 10, // Adjust spacing between items \r\n    backgroundColor: '#f0f0f0', // Optional: background color for cards\r\n    borderRadius: 10, // Optional: rounded corners for cards\r\n    padding: 20, // Adjust padding inside cards\r\n  },\r\n  image: {\r\n    width: '100%', // Make the image fill the width of the card\r\n    height: undefined, // Ensure the height adjusts to maintain aspect ratio\r\n    aspectRatio: 1, // Adjust aspect ratio according to your images\r\n    resizeMode: 'contain', // Keep the image within the bounds of the card\r\n    marginBottom: 10, // Space between the image and the text below it\r\n  },\r\n});\r\n\r\n\r\nexport default PoseDetection;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { db, auth } from '../firebase';\r\nimport { collection, query, where, getDocs } from 'firebase/firestore';\r\nimport { ImageBackground } from 'react-native';\r\nimport '../App.css';\r\n\r\nconst HistoryPage = () => {\r\n    const [workouts, setWorkouts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            if (user) {\r\n                console.log('User is logged in:', user);\r\n                fetchWorkouts();\r\n            } else {\r\n                console.log('No user logged in');\r\n                setLoading(false);\r\n            }\r\n        });\r\n\r\n        return () => unsubscribe(); // Cleanup subscription on component unmount\r\n    }, []);\r\n\r\n    const fetchWorkouts = async () => {\r\n        setLoading(true);\r\n        if (auth.currentUser) {\r\n            const emailToQuery = auth.currentUser.email.trim().toLowerCase();\r\n            const fetchFromCollection = async (collectionName) => {\r\n                const ref = collection(db, collectionName);\r\n                const q = query(ref, where('userEmail', '==', emailToQuery));\r\n                const querySnapshot = await getDocs(q);\r\n                return querySnapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    type: collectionName,\r\n                    ...doc.data(),\r\n                    createdAt: doc.data().createdAt ? new Date(doc.data().createdAt.seconds * 1000) : new Date() // Converting Firestore Timestamp to Date\r\n                }));\r\n            };\r\n\r\n            try {\r\n                // Fetch data in parallel\r\n                const [squatSessions, jumpingJackSessions, pushupSessions, plankSessions] = await Promise.all([\r\n                    fetchFromCollection('squatSessions'),\r\n                    fetchFromCollection('jumpingJackSessions'),\r\n                    fetchFromCollection('pushUpSessions'),\r\n                    fetchFromCollection('plankSessions')\r\n                ]);\r\n                const workoutsData = [...squatSessions, ...jumpingJackSessions, ...pushupSessions, ...plankSessions];\r\n                // Sort workouts by createdAt date in descending order\r\n                workoutsData.sort((a, b) => b.createdAt - a.createdAt);\r\n                setWorkouts(workoutsData);\r\n                console.log('Fetched Workouts:', workoutsData);\r\n            } catch (error) {\r\n                console.error(\"Error fetching workouts:\", error);\r\n            }\r\n            setLoading(false);\r\n        } else {\r\n            console.log('Authentication user not found.');\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const cardStyle = {\r\n        boxShadow: \"0 4px 8px 0 rgba(0,0,0,0.2)\",\r\n        transition: \"0.3s\",\r\n        width: \"300px\",\r\n        padding: \"10px\",\r\n        margin: \"10px\",\r\n        borderRadius: \"5px\",\r\n        backgroundColor: \"#fff\",\r\n        textAlign: \"center\",\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <ImageBackground\r\n            source={require('../assets/BlackBackground.png')}\r\n            className=\"backgroundImage\"\r\n            resizeMode=\"cover\"\r\n        >\r\n            <div style={{ padding: '20px', height: '100vh', overflowY: 'auto' }}>\r\n                <h1>Workout History</h1>\r\n                <div style={{ display: 'flex', flexWrap: 'wrap', gap: '20px', justifyContent: 'center' }}>\r\n                    {workouts.map(workout => (\r\n                        <div key={workout.id} style={cardStyle}>\r\n                            <h2>\r\n                                {workout.type === 'squatSessions' ? 'Squat Session' :\r\n                                    workout.type === 'jumpingJackSessions' ? 'Jumping Jack Session' :\r\n                                        workout.type === 'plankSessions' ? 'Plank Session' :\r\n                                            workout.type === 'pushUpSessions' ? 'Pushup Session' : 'Unknown Session'}\r\n                            </h2>\r\n                            <p>\r\n                                <strong>\r\n                                    {workout.type === 'squatSessions' ? 'Squat Count' :\r\n                                        workout.type === 'jumpingJackSessions' ? 'Jump Count' :\r\n                                            workout.type === 'plankSessions' ? 'Duration' :\r\n                                                workout.type === 'pushUpSessions' ? 'Pushup Count' : 'Unknown Count'}:\r\n                                </strong>\r\n                                {workout[workout.type === 'squatSessions' ? 'squatCount' :\r\n                                    workout.type === 'jumpingJackSessions' ? 'jumpingJackCount' :\r\n                                        workout.type === 'plankSessions' ? 'plankTime' :\r\n                                            workout.type === 'pushUpSessions' ? 'pushUpCount' : 'N/A']}\r\n                            </p>\r\n                            <p><strong>Date:</strong> {new Date(workout.createdAt).toLocaleString()}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </ImageBackground>\r\n    );\r\n}\r\n\r\nexport default HistoryPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { StyleSheet, TouchableOpacity, Text, View, Image, ImageBackground, ScrollView } from \"react-native\";\r\nimport { auth } from '../firebase';\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport BrowsePage from './BrowsePage';\r\nimport ProfilePage from \"./ProfilePage\";\r\nimport PoseDetection from \"./PoseDetection\";\r\nimport HistoryPage from \"./HistoryPage\";\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst HomePage = () => {\r\n    const [isEmailVerified, setIsEmailVerified] = useState(false);\r\n    const [rerender, setRerender] = useState(false); // State to trigger re-render\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            if (user) {\r\n                setIsEmailVerified(user.emailVerified);\r\n                setRerender(prevState => !prevState); // Trigger re-render on auth state change\r\n            }\r\n        });\r\n\r\n        return unsubscribe;\r\n    }, []);\r\n\r\n    const isUserLoggedIn = !!auth.currentUser;\r\n    const navigation = useNavigation();\r\n\r\n    return (\r\n        <Tab.Navigator\r\n            screenOptions={({ route }) => ({\r\n                tabBarIcon: ({ focused, color, size }) => {\r\n                    let iconName;\r\n\r\n                    if (route.name === 'Profile') {\r\n                        iconName = 'user';\r\n                    } else if (route.name === 'History') {\r\n                        iconName = 'history';\r\n                    } else if (route.name === 'Scan') {\r\n                        iconName = 'camera';\r\n                    } else if (route.name === 'Browse') {\r\n                        iconName = 'search';\r\n                    } else if (route.name === 'Settings') {\r\n                        iconName = 'gear';\r\n                    }\r\n\r\n                    // You can return any component that you like here!\r\n                    return <Icon name={iconName} size={size} color={color} />;\r\n                },\r\n                tabBarActiveTintColor: '#3498db',\r\n                tabBarInactiveTintColor: 'gray',\r\n                tabBarLabelStyle: { fontSize: 12 },\r\n                tabBarStyle: { paddingBottom: 5, height: 60 },\r\n            })}\r\n        >\r\n            {isEmailVerified && <Tab.Screen name=\"Profile\" component={ProfilePage} />}\r\n            {isUserLoggedIn && isEmailVerified && (\r\n                <>\r\n                    <Tab.Screen name=\"History\" component={HistoryPage} />\r\n                    <Tab.Screen name=\"Scan\" component={PoseDetection} />\r\n                    <Tab.Screen name=\"Browse\" component={BrowsePage} />\r\n                </>\r\n            )}\r\n            <Tab.Screen name=\"Settings\" component={SettingsScreen} />\r\n        </Tab.Navigator>\r\n    );\r\n};\r\n\r\nconst SettingsScreen = () => {\r\n    const navigation = useNavigation();\r\n\r\n    const handleSignOut = () => {\r\n        auth.signOut()\r\n            .then(() => {\r\n                navigation.replace(\"Login\");\r\n            })\r\n            .catch((error) => alert(error.message));\r\n    };\r\n\r\n    const goToLogin = () => {\r\n        navigation.navigate('Login');\r\n    };\r\n\r\n    return (\r\n        <ImageBackground\r\n            source={require('../assets/BlackBackground.png')}\r\n            style={styles.backgroundImage}\r\n            resizeMode=\"cover\"\r\n        >\r\n            <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n                <View style={styles.container}>\r\n                    <CollapsibleSection title=\"Introduction\">\r\n                        <Text style={styles.description}>\r\n                            Say hello to a fitness journey reimagined by Eoin, Due, and Pedro\r\n                        </Text>\r\n                        <Text style={styles.description}>United by a love for Fitness, Cybersecurity, and Tech.</Text>\r\n                        <Text style={styles.description}>Our app isn't just any fitness tracker; it's a personal coach powered by a smart CNN model.\r\n                        </Text>\r\n                        <Text style={styles.description}>We've baked in some serious cybersecurity measures too, because your peace of mind matters to us. And yes, we're always getting better, thanks to Agile methodologies that let us evolve fast and keep things fresh.\r\n                        </Text>\r\n                    </CollapsibleSection>\r\n                    <CollapsibleSection title=\"About the App\">\r\n                        <Text style={styles.description}>\r\n                            Our app isn't just any fitness tracker; it's a personal coach powered by a smart CNN model.\r\n                            We've baked in some serious cybersecurity measures too, because your peace of mind matters to us.\r\n                        </Text>\r\n                    </CollapsibleSection>\r\n                    <View style={styles.horizontalContainer}>\r\n                        <CollapsibleSection title=\"Eoin\">\r\n                            <Text style={styles.description}>\r\n                                Hiya, I'm Eoin! I took care of the front-end of the project, the firestore storage, Api calls, Hosting and most importantly,\r\n                                 the intergration of the CNN (Convolutional Nueral Network) Exercises!\r\n\r\n                            </Text>\r\n                        </CollapsibleSection>\r\n                        <CollapsibleSection title=\"Pedro\">\r\n                            <Text style={styles.description}>\r\n                            Heyo, My name is Pedro, I worked on the cybersecurity, ethical hacking, authorization of this project!\r\n                            </Text>\r\n                        </CollapsibleSection>\r\n                        <CollapsibleSection title=\"Due\">\r\n                            <Text style={styles.description}>\r\n                            Hello, I am Due. I took care of all the DevOps tasks relating to this project as well as planning \r\n                            out testing plans (and actual testing) for this project. I also handle some architecture relating to this project as well.\r\n                            </Text>\r\n                        </CollapsibleSection>\r\n                    </View>\r\n                    <TouchableOpacity style={styles.button} onPress={goToLogin}>\r\n                        <Text style={styles.buttonText}>Login/Register</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.button} onPress={handleSignOut}>\r\n                        <Text style={styles.buttonText}>Sign Out</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </ScrollView>\r\n        </ImageBackground>\r\n    );\r\n};\r\n\r\nconst CollapsibleSection = ({ title, children }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggleSection = () => {\r\n        setIsOpen(!isOpen);\r\n    };\r\n\r\n    return (\r\n        <View style={styles.sectionContainer}>\r\n            <TouchableOpacity onPress={toggleSection} style={styles.sectionHeader}>\r\n                <Text style={styles.sectionTitle}>{title}</Text>\r\n            </TouchableOpacity>\r\n            {isOpen && (\r\n                <View style={styles.sectionContent}>\r\n                    {children}\r\n                </View>\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    scrollContainer: {\r\n        flexGrow: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        paddingVertical: 20,\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        paddingHorizontal: 20,\r\n    },\r\n    sectionContainer: {\r\n        width: '100%',\r\n        marginTop: 10,\r\n    },\r\n    sectionHeader: {\r\n        padding: 10,\r\n        backgroundColor: '#3498db',\r\n        borderRadius: 10,\r\n    },\r\n    sectionTitle: {\r\n        color: '#fff',\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n    },\r\n    sectionContent: {\r\n        padding: 10,\r\n        backgroundColor: '#f0f0f0',\r\n        borderRadius: 5,\r\n    },\r\n    description: {\r\n        fontSize: 16,\r\n        textAlign: 'center',\r\n        color: '#666',\r\n    },\r\n    button: {\r\n        backgroundColor: '#FF6347',\r\n        padding: 15,\r\n        borderRadius: 10,\r\n        alignItems: 'center',\r\n        marginBottom: 15,\r\n        marginTop: 30,\r\n    },\r\n    buttonText: {\r\n        color: '#fff',\r\n        fontWeight: 'bold',\r\n    },\r\n    backgroundImage: {\r\n        flex: 1,\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    horizontalContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        flexWrap: 'wrap',\r\n        marginBottom: 20,\r\n    },\r\n});\r\n\r\nexport default HomePage;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { PoseLandmarker, FilesetResolver, DrawingUtils } from \"@mediapipe/tasks-vision\";\r\nimport { db, auth } from '../../firebase.js';\r\nimport { ImageBackground } from 'react-native';\r\nimport '../../App.css';\r\n\r\nconst SquatDetection = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [poseLandmarker, setPoseLandmarker] = useState(null);\r\n  const [isDetecting, setIsDetecting] = useState(false);\r\n  const [angle, setAngle] = useState(null);\r\n  const [showWarning, setShowWarning] = useState(false);\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [squatCount, setSquatCount] = useState(0);\r\n  const [kneeWidthStatus, setKneeWidthStatus] = useState(\"\");\r\n  const [lastSquatTime, setLastSquatTime] = useState(0);\r\n  const [isInSquatPosition, setIsInSquatPosition] = useState(false);\r\n  const [conditions, setConditions] = useState({\r\n    headStraight: false,\r\n    kneesShoulderWidthApart: false,\r\n    squatDepthReached: false\r\n  });\r\n\r\n\r\n\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(currentUser => {\r\n      if (currentUser) {\r\n        setUser({\r\n          email: currentUser.email,\r\n          uid: currentUser.uid\r\n        });\r\n      } else {\r\n        setUser(null);\r\n      }\r\n    });\r\n\r\n\r\n    const initPoseLandmarker = async () => {\r\n      const vision = await FilesetResolver.forVisionTasks(\r\n        \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0/wasm\"\r\n      );\r\n      const poseLandmarker = await PoseLandmarker.createFromOptions(vision, {\r\n        baseOptions: {\r\n          modelAssetPath: `https://storage.googleapis.com/mediapipe-models/pose_landmarker/pose_landmarker_lite/float16/1/pose_landmarker_lite.task`,\r\n          delegate: \"GPU\"\r\n        },\r\n        runningMode: \"IMAGE\",\r\n        numPoses: 1\r\n      });\r\n      setPoseLandmarker(poseLandmarker);\r\n    };\r\n\r\n    initPoseLandmarker();\r\n\r\n    return () => poseLandmarker?.close();\r\n  }, []);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const video = videoRef.current;\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const drawingUtils = new DrawingUtils(ctx);\r\n\r\n    let animationFrameId;\r\n\r\n    const predictWebcam = async () => {\r\n      setIsDetecting(true);\r\n      const result = await poseLandmarker?.detect(video);\r\n      setIsDetecting(false);\r\n\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      const drawingUtils = new DrawingUtils(ctx);\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      if (result && result.landmarks.length > 0) {\r\n        result.landmarks.forEach((landmark) => {\r\n          checkHeadStraight(landmark, ctx, drawingUtils);\r\n\r\n          const kneesAreShoulderWidthApart = checkKneesShoulderWidthApart(landmark);\r\n          const squatDepthIsReached = checkSquatDepthReached(landmark);\r\n\r\n          setConditions(prevConditions => ({\r\n            ...prevConditions,\r\n            kneesShoulderWidthApart: kneesAreShoulderWidthApart,\r\n            squatDepthReached: squatDepthIsReached\r\n          }));\r\n\r\n          if (squatDepthIsReached) {\r\n            setIsInSquatPosition(true);\r\n          } else {\r\n            setIsInSquatPosition(false);\r\n          }\r\n\r\n          // Update knee width status on screen\r\n          setKneeWidthStatus(kneesAreShoulderWidthApart ? \"Knees are shoulder-width apart\" : \"WARNING: Knees should be shoulder-width apart\");\r\n\r\n          //Squat Count\r\n          if (!isInSquatPosition && squatDepthIsReached) {\r\n            const currentTime = new Date().getTime();\r\n            if (currentTime > lastSquatTime + 2000) {\r\n              setSquatCount(prevCount => prevCount + 1);\r\n              setLastSquatTime(currentTime);\r\n            }\r\n          }\r\n        });\r\n      }\r\n      requestAnimationFrame(predictWebcam);\r\n    };\r\n\r\n    //-------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n    if (poseLandmarker && video) {\r\n      const constraints = { video: true };\r\n      navigator.mediaDevices.getUserMedia(constraints).then((stream) => {\r\n        video.srcObject = stream;\r\n        video.addEventListener(\"loadeddata\", () => {\r\n          predictWebcam();\r\n        });\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      cancelAnimationFrame(animationFrameId);\r\n      if (video.srcObject) {\r\n        video.srcObject.getTracks().forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, [poseLandmarker]);\r\n\r\n\r\n  const calculateAngle = (A, B, C) => {\r\n    const AB = Math.sqrt(Math.pow(B.x - A.x, 2) + Math.pow(B.y - A.y, 2));\r\n    const BC = Math.sqrt(Math.pow(B.x - C.x, 2) + Math.pow(B.y - C.y, 2));\r\n    const AC = Math.sqrt(Math.pow(C.x - A.x, 2) + Math.pow(C.y - A.y, 2));\r\n    return Math.acos((BC * BC + AB * AB - AC * AC) / (2 * BC * AB)) * (180 / Math.PI);\r\n  };\r\n\r\n  const saveSessionData = () => {\r\n    if (squatCount > 0) {\r\n      db.collection(\"squatSessions\").add({\r\n        userEmail: user.email,\r\n        userId: user.uid,\r\n        squatCount: squatCount,\r\n        kneeStatus: kneeWidthStatus,\r\n        headAngle: angle,\r\n        conditions: conditions,\r\n        createdAt: new Date()\r\n      })\r\n        .then(() => {\r\n          console.log(\"Session data successfully written!\");\r\n          setSquatCount(0); // Reset squat count after saving\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error writing session data: \", error);\r\n        });\r\n    } else {\r\n      console.log(\"No user logged in or no squats counted\");\r\n    }\r\n  };\r\n\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n  // Conditions\r\n\r\n  const checkHeadStraight = (landmarks, ctx, drawingUtils) => {\r\n    // Use neck and shoulder landmarks to calculate a vertical alignment\r\n    const verticalAlignmentAngle = calculateAngle(landmarks[11], landmarks[1], landmarks[12]);\r\n\r\n    // Update state with the calculated angle, labeled specifically as 'Head Angle'\r\n    setAngle(verticalAlignmentAngle);\r\n\r\n    // Determine if the alignment is within an acceptable vertical range\r\n    // Here, an angle close to 55 degrees means the shoulders and neck are aligned in a straight line\r\n    const isOutOfLine = verticalAlignmentAngle < 50 || verticalAlignmentAngle > 62;\r\n    setShowWarning(isOutOfLine);\r\n\r\n    // Determine color based on head position\r\n    const color = isOutOfLine ? \"red\" : \"black\";\r\n\r\n    // Drawing the landmarks and connectors\r\n    drawingUtils.drawConnectors(landmarks, PoseLandmarker.POSE_CONNECTIONS, { color: color });\r\n    drawingUtils.drawLandmarks(landmarks, {\r\n      color: color,\r\n      radius: (data) => data.from ? DrawingUtils.lerp(data.from.z, -0.15, 0.1, 5, 20) : 4  // Default radius is 4 if no 'z' value, the z value makes the nodes freak out\r\n    });\r\n  };\r\n\r\n\r\n  const checkKneesShoulderWidthApart = (landmarks) => {\r\n    // Calculate distances between shoulders and knees\r\n    const shoulderWidth = Math.sqrt(\r\n      Math.pow(landmarks[12].x - landmarks[11].x, 2) +\r\n      Math.pow(landmarks[12].y - landmarks[11].y, 2)\r\n    );\r\n    const kneeWidth = Math.sqrt(\r\n      Math.pow(landmarks[26].x - landmarks[25].x, 2) +\r\n      Math.pow(landmarks[26].y - landmarks[25].y, 2)\r\n    );\r\n\r\n    // We consider knees are shoulder-width apart if the knee width is within 90% to 110% of the shoulder width\r\n    return kneeWidth >= 0.5 * shoulderWidth && kneeWidth <= 1.5 * shoulderWidth;\r\n  };\r\n\r\n  const checkSquatDepthReached = (landmarks) => {\r\n    // First, calculate the midpoints if you're using individual left and right points\r\n    const hipMidpointY = (landmarks[23].y + landmarks[24].y) / 2;\r\n    const kneeMidpointY = (landmarks[25].y + landmarks[26].y) / 2;\r\n\r\n    // Check if the hips are at or below the knees (greater y value indicates a lower position in many coordinate systems)\r\n    return hipMidpointY >= kneeMidpointY;\r\n  };\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n  return (\r\n    <ImageBackground\r\n            source={require('../../assets/BlackBackground.png')}\r\n            className=\"backgroundImage\"\r\n            resizeMode=\"cover\"\r\n        >\r\n    <div className=\"app-container\">\r\n      <div className=\"video-card\">\r\n        {isDetecting && <p>Detecting landmarks...</p>}\r\n        <video ref={videoRef} autoPlay className=\"video-stream\" />\r\n        <canvas ref={canvasRef} className=\"video-overlay\" />\r\n      </div>\r\n      <div className=\"info-card\">\r\n        <p>Squat Count: {squatCount}</p>\r\n        <p>Angle: {angle ? `${angle.toFixed(2)}°` : 'N/A'}</p>\r\n        <p>Head Correction: {showWarning ? \"Out of Correct Angle Space\" : \"In Correct Angle Space\"}</p>\r\n        <p>Knees: {kneeWidthStatus}</p>\r\n        <button onClick={saveSessionData}>Save Session</button>\r\n      </div>\r\n    </div>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default SquatDetection;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { PoseLandmarker, FilesetResolver, DrawingUtils } from \"@mediapipe/tasks-vision\";\r\nimport { db, auth } from '../../firebase.js';\r\nimport { ImageBackground } from 'react-native';\r\nimport '../../App.css';\r\n\r\nconst PlankDetection = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [poseLandmarker, setPoseLandmarker] = useState(null);\r\n  const [isDetecting, setIsDetecting] = useState(false);\r\n  const [angle, setAngle] = useState(null);\r\n  const [showWarning, setShowWarning] = useState(false);\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [plankTime, setPlankTime] = useState(0);\r\n  const startTimeRef = useRef(null);\r\n  const [bodyStraight, setBodyStraight] = useState(false);\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(currentUser => {\r\n      if (currentUser) {\r\n        setUser({\r\n          email: currentUser.email,\r\n          uid: currentUser.uid\r\n        });\r\n      } else {\r\n        setUser(null);\r\n      }\r\n    });\r\n\r\n    const initPoseLandmarker = async () => {\r\n      const vision = await FilesetResolver.forVisionTasks(\r\n        \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0/wasm\"\r\n      );\r\n      const poseLandmarker = await PoseLandmarker.createFromOptions(vision, {\r\n        baseOptions: {\r\n          modelAssetPath: `https://storage.googleapis.com/mediapipe-models/pose_landmarker/pose_landmarker_lite/float16/1/pose_landmarker_lite.task`,\r\n          delegate: \"GPU\"\r\n        },\r\n        runningMode: \"IMAGE\",\r\n        numPoses: 1\r\n      });\r\n      setPoseLandmarker(poseLandmarker);\r\n    };\r\n\r\n    initPoseLandmarker();\r\n\r\n    return () => poseLandmarker?.close();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const video = videoRef.current;\r\n    const constraints = { video: true };\r\n\r\n    let stream = null;\r\n\r\n    const enableStream = async () => {\r\n      try {\r\n        stream = await navigator.mediaDevices.getUserMedia(constraints);\r\n        video.srcObject = stream;\r\n        video.play();\r\n      } catch (error) {\r\n        console.error(\"Stream access error:\", error);\r\n      }\r\n    };\r\n\r\n    enableStream();\r\n\r\n    return () => {\r\n      if (stream) {\r\n        stream.getTracks().forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, []); // Empty dependency array ensures this runs only once on mount\r\n\r\n  useEffect(() => {\r\n    const video = videoRef.current;\r\n    const canvas = canvasRef.current;\r\n    if (!canvas || !video || !poseLandmarker) return;\r\n\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const drawingUtils = new DrawingUtils(ctx);\r\n\r\n    let animationFrameId;\r\n\r\n    const predictWebcam = async () => {\r\n      setIsDetecting(true);\r\n      const result = await poseLandmarker.detect(video);\r\n      setIsDetecting(false);\r\n\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      if (result && result.landmarks.length > 0) {\r\n        result.landmarks.forEach((landmark) => {\r\n          const bodyIsStraight = checkBodyStraight(landmark, ctx, drawingUtils);\r\n          setBodyStraight(bodyIsStraight);\r\n          if (bodyIsStraight) {\r\n            if (!startTimeRef.current) {\r\n              startTimeRef.current = Date.now(); // Capture the start time when the body first becomes straight\r\n            }\r\n          } else {\r\n            if (startTimeRef.current) {\r\n              const endTime = Date.now();\r\n              const duration = (endTime - startTimeRef.current) / 1000; // Calculate duration in seconds\r\n              setPlankTime(prevTime => prevTime + duration); // Add duration to the existing plank time\r\n              startTimeRef.current = null; // Reset start time\r\n            }\r\n          }\r\n        });\r\n      }\r\n      animationFrameId = requestAnimationFrame(predictWebcam);\r\n    };\r\n\r\n    video.addEventListener(\"canplay\", predictWebcam);\r\n\r\n    return () => {\r\n      cancelAnimationFrame(animationFrameId);\r\n      video.removeEventListener(\"canplay\", predictWebcam);\r\n    };\r\n  }, [poseLandmarker]);\r\n\r\n  const checkBodyStraight = (landmarks, ctx, drawingUtils) => {\r\n    if (!landmarks || landmarks.length === 0) {\r\n      console.error('No landmarks detected.');\r\n      return false;\r\n    }\r\n    const shoulderHipLineAngle = calculateAngle(landmarks[11], landmarks[23], landmarks[24]);\r\n    setAngle(shoulderHipLineAngle);\r\n    const isBodyNotStraight = shoulderHipLineAngle > 50; // Tighter threshold for straightness\r\n    setShowWarning(isBodyNotStraight);\r\n    const color = isBodyNotStraight ? \"red\" : \"black\";\r\n    drawingUtils.drawLandmarks(landmarks, { color: color });\r\n    drawingUtils.drawConnectors(landmarks, PoseLandmarker.POSE_CONNECTIONS, { color: color });\r\n    return !isBodyNotStraight;\r\n  };\r\n\r\n  const calculateAngle = (A, B, C) => {\r\n    const AB = Math.sqrt(Math.pow(B.x - A.x, 2) + Math.pow(B.y - A.y, 2));\r\n    const BC = Math.sqrt(Math.pow(B.x - C.x, 2) + Math.pow(B.y - C.y, 2));\r\n    const AC = Math.sqrt(Math.pow(C.x - A.x, 2) + Math.pow(A.y - C.y, 2));\r\n    return Math.acos((BC * BC + AB * AB - AC * AC) / (2 * BC * AB)) * (180 / Math.PI);\r\n  };\r\n\r\n  const saveSessionData = () => {\r\n    if (plankTime > 0 && user) {\r\n      db.collection(\"plankSessions\").add({\r\n        userEmail: user.email,\r\n        userId: user.uid,\r\n        plankTime: plankTime,\r\n        bodyAngle: angle,\r\n        bodyStraight: bodyStraight,\r\n        createdAt: new Date()\r\n      })\r\n        .then(() => {\r\n          console.log(\"Session data successfully written!\");\r\n          setPlankTime(0); // Reset time after saving\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error writing session data: \", error);\r\n        });\r\n    } else {\r\n      console.log(\"No user logged in or no planking detected\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ImageBackground\r\n            source={require('../../assets/BlackBackground.png')}\r\n            className=\"backgroundImage\"\r\n            resizeMode=\"cover\"\r\n        >\r\n    <div className=\"app-container\">\r\n      <div className=\"video-card\">\r\n        {isDetecting && <p>Detecting landmarks...</p>}\r\n        <video ref={videoRef} autoPlay className=\"video-stream\" />\r\n        <canvas ref={canvasRef} className=\"video-overlay\" />\r\n      </div>\r\n      <div className=\"info-card\">\r\n        <p>Plank Time: {plankTime.toFixed(2)} seconds</p>\r\n        <p>Angle: {angle ? `${angle.toFixed(2)}°` : 'N/A'}</p>\r\n        <p>Body Position: {showWarning ? \"Body Not Straight\" : \"Body Straight\"}</p>\r\n        <button onClick={saveSessionData}>Save Session</button>\r\n      </div>\r\n    </div>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nexport default PlankDetection;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { PoseLandmarker, FilesetResolver, DrawingUtils } from \"@mediapipe/tasks-vision\";\r\nimport { db, auth } from '../../firebase.js';\r\nimport { ImageBackground } from 'react-native';\r\nimport '../../App.css';\r\n\r\nconst JumpingJackDetection = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [poseLandmarker, setPoseLandmarker] = useState(null);\r\n  const [isDetecting, setIsDetecting] = useState(false);\r\n  const [angle, setAngle] = useState(null);\r\n  const [showWarning, setShowWarning] = useState(false);\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [jumpingJackCount, setJumpingJackCount] = useState(0);\r\n  const [feetPositionStatus, setFeetPositionStatus] = useState(\"\");\r\n  const [conditions, setConditions] = useState({\r\n    armsRaised: false,\r\n    feetApart: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(currentUser => {\r\n      if (currentUser) {\r\n        setUser({\r\n          email: currentUser.email,\r\n          uid: currentUser.uid\r\n        });\r\n      } else {\r\n        setUser(null);\r\n      }\r\n    });\r\n\r\n    const initPoseLandmarker = async () => {\r\n      const vision = await FilesetResolver.forVisionTasks(\r\n        \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0/wasm\"\r\n      );\r\n      const poseLandmarker = await PoseLandmarker.createFromOptions(vision, {\r\n        baseOptions: {\r\n          modelAssetPath: `https://storage.googleapis.com/mediapipe-models/pose_landmarker/pose_landmarker_lite/float16/1/pose_landmarker_lite.task`,\r\n          delegate: \"GPU\"\r\n        },\r\n        runningMode: \"IMAGE\",\r\n        numPoses: 1\r\n      });\r\n      setPoseLandmarker(poseLandmarker);\r\n    };\r\n\r\n    initPoseLandmarker();\r\n\r\n    return () => poseLandmarker?.close();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const video = videoRef.current;\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    let drawingUtils;\r\n\r\n    const predictWebcam = async () => {\r\n      if (!drawingUtils) {\r\n        drawingUtils = new DrawingUtils(ctx);\r\n      }\r\n\r\n      setIsDetecting(true);\r\n      const result = await poseLandmarker?.detect(video);\r\n      setIsDetecting(false);\r\n\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      if (result && result.landmarks.length > 0) {\r\n        result.landmarks.forEach((landmark) => {\r\n          const armsAreRaised = checkArmsRaised(landmark);\r\n          const feetAreApart = checkFeetApart(landmark);\r\n\r\n          setConditions(prevConditions => ({\r\n            ...prevConditions,\r\n            armsRaised: armsAreRaised,\r\n            feetApart: feetAreApart\r\n          }));\r\n\r\n          if (armsAreRaised && feetAreApart) {\r\n            setJumpingJackCount(prevCount => prevCount + 1);\r\n          }\r\n\r\n          setFeetPositionStatus(feetAreApart ? \"Feet are apart\" : \"WARNING: Feet should be apart\");\r\n\r\n          // Drawing the landmarks and connectors\r\n          drawingUtils.drawConnectors(landmark, PoseLandmarker.POSE_CONNECTIONS, { color: 'Blue' });\r\n          drawingUtils.drawLandmarks(landmark, { color: 'Black', radius: 4 });\r\n        });\r\n      }\r\n      requestAnimationFrame(predictWebcam);\r\n    };\r\n\r\n    if (poseLandmarker && video) {\r\n      const constraints = { video: true };\r\n      navigator.mediaDevices.getUserMedia(constraints).then((stream) => {\r\n        video.srcObject = stream;\r\n        video.addEventListener(\"loadeddata\", () => {\r\n          predictWebcam();\r\n        });\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      if (video.srcObject) {\r\n        video.srcObject.getTracks().forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, [poseLandmarker]);\r\n\r\n\r\n  const checkArmsRaised = (landmarks) => {\r\n    // Check if the hands are above the head\r\n    const leftHandRaised = landmarks[15].y < landmarks[1].y;\r\n    const rightHandRaised = landmarks[16].y < landmarks[1].y;\r\n    return leftHandRaised && rightHandRaised;\r\n  };\r\n\r\n  const checkFeetApart = (landmarks) => {\r\n    // Check if the feet are wider than the hips\r\n    const hipWidth = Math.abs(landmarks[23].x - landmarks[24].x);\r\n    const feetDistance = Math.abs(landmarks[27].x - landmarks[28].x);\r\n    return feetDistance > hipWidth;\r\n  };\r\n\r\n  const saveSessionData = () => {\r\n    if (jumpingJackCount > 0) {\r\n      db.collection(\"jumpingJackSessions\").add({\r\n        userEmail: user.email,\r\n        userId: user.uid,\r\n        jumpingJackCount: jumpingJackCount,\r\n        feetStatus: feetPositionStatus,\r\n        conditions: conditions,\r\n        createdAt: new Date()\r\n      })\r\n        .then(() => {\r\n          console.log(\"Session data successfully written!\");\r\n          setJumpingJackCount(0); // Reset count after saving\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error writing session data: \", error);\r\n        });\r\n    } else {\r\n      console.log(\"No user logged in or No jumping jacks counted\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ImageBackground\r\n            source={require('../../assets/BlackBackground.png')}\r\n            className=\"backgroundImage\"\r\n            resizeMode=\"cover\"\r\n        >\r\n    <div className=\"app-container\">\r\n      <div className=\"video-card\">\r\n        {isDetecting && <p>Detecting landmarks...</p>}\r\n        <video ref={videoRef} autoPlay className=\"video-stream\" />\r\n        <canvas ref={canvasRef} className=\"video-overlay\" />\r\n      </div>\r\n      <div className=\"info-card\">\r\n        <p>Jumping Jack Count: {jumpingJackCount}</p>\r\n        <p>Feet Position: {feetPositionStatus}</p>\r\n        <button onClick={saveSessionData}>Save Session</button>\r\n      </div>\r\n    </div>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nexport default JumpingJackDetection;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { PoseLandmarker, FilesetResolver, DrawingUtils } from \"@mediapipe/tasks-vision\";\r\nimport { db, auth } from '../../firebase.js';\r\nimport { ImageBackground } from 'react-native';\r\nimport '../../App.css';\r\n\r\nconst PushUpDetection = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [poseLandmarker, setPoseLandmarker] = useState(null);\r\n  const [isDetecting, setIsDetecting] = useState(false);\r\n  const [angle, setAngle] = useState(null);\r\n  const [showWarning, setShowWarning] = useState(false);\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [pushUpCount, setPushUpCount] = useState(0);\r\n  const [elbowStatus, setElbowStatus] = useState(\"\");\r\n  const [conditions, setConditions] = useState({\r\n    bodyStraight: false,\r\n    elbowsTucked: false,\r\n    chestNearFloor: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(currentUser => {\r\n      if (currentUser) {\r\n        setUser({\r\n          email: currentUser.email,\r\n          uid: currentUser.uid\r\n        });\r\n      } else {\r\n        setUser(null);\r\n      }\r\n    });\r\n\r\n    const initPoseLandmarker = async () => {\r\n      const vision = await FilesetResolver.forVisionTasks(\r\n        \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0/wasm\"\r\n      );\r\n      const poseLandmarker = await PoseLandmarker.createFromOptions(vision, {\r\n        baseOptions: {\r\n          modelAssetPath: `https://storage.googleapis.com/mediapipe-models/pose_landmarker/pose_landmarker_lite/float16/1/pose_landmarker_lite.task`,\r\n          delegate: \"GPU\"\r\n        },\r\n        runningMode: \"IMAGE\",\r\n        numPoses: 1\r\n      });\r\n      setPoseLandmarker(poseLandmarker);\r\n    };\r\n\r\n    initPoseLandmarker();\r\n\r\n    return () => poseLandmarker?.close();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const video = videoRef.current;\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const drawingUtils = new DrawingUtils(ctx);\r\n\r\n    let animationFrameId;\r\n\r\n    const predictWebcam = async () => {\r\n      setIsDetecting(true);\r\n      const result = await poseLandmarker?.detect(video);\r\n      setIsDetecting(false);\r\n\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      const drawingUtils = new DrawingUtils(ctx);\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      if (result && result.landmarks.length > 0) {\r\n        result.landmarks.forEach((landmark) => {\r\n          checkBodyStraight(landmark, ctx, drawingUtils);\r\n\r\n          const elbowsAreTucked = checkElbowsTucked(landmark);\r\n          const chestIsNearFloor = checkChestNearFloor(landmark);\r\n\r\n          setConditions(prevConditions => ({\r\n            ...prevConditions,\r\n            bodyStraight: !showWarning,\r\n            elbowsTucked: elbowsAreTucked,\r\n            chestNearFloor: chestIsNearFloor\r\n          }));\r\n\r\n          setElbowStatus(elbowsAreTucked ? \"Elbows are properly tucked\" : \"WARNING: Keep elbows close to body\");\r\n\r\n          if (chestIsNearFloor && elbowsAreTucked) {\r\n            setPushUpCount(prevCount => prevCount + 1);\r\n          }\r\n        });\r\n      }\r\n      requestAnimationFrame(predictWebcam);\r\n    };\r\n\r\n    if (poseLandmarker && video) {\r\n      const constraints = { video: true };\r\n      navigator.mediaDevices.getUserMedia(constraints).then((stream) => {\r\n        video.srcObject = stream;\r\n        video.addEventListener(\"loadeddata\", () => {\r\n          predictWebcam();\r\n        });\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      cancelAnimationFrame(animationFrameId);\r\n      if (video.srcObject) {\r\n        video.srcObject.getTracks().forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, [poseLandmarker]);\r\n\r\n  const checkBodyStraight = (landmarks, ctx, drawingUtils) => {\r\n    const bodyStraightnessAngle = calculateAngle(landmarks[11], landmarks[24], landmarks[23]); // using shoulder and hip points\r\n    setAngle(bodyStraightnessAngle);\r\n    const isBodyNotStraight = bodyStraightnessAngle > 20; // Set a threshold angle for straightness\r\n    setShowWarning(isBodyNotStraight);\r\n    const color = isBodyNotStraight ? \"red\" : \"black\";\r\n    drawingUtils.drawLandmarks(landmarks, { color: color });\r\n    drawingUtils.drawConnectors(landmarks, PoseLandmarker.POSE_CONNECTIONS, { color: color });\r\n  };\r\n\r\n  const checkElbowsTucked = (landmarks) => {\r\n    const elbowAngle = calculateAngle(landmarks[11], landmarks[13], landmarks[15]); // Left arm \r\n    return elbowAngle < 45; // Less than 45 degrees is considered 'tucked'\r\n  };\r\n\r\n  const checkChestNearFloor = (landmarks) => {\r\n    const chestY = landmarks[11].y; // Y-coordinate of the chest\r\n    const leftHandY = landmarks[15].y; // Y-coordinate of the left wrist\r\n    const rightHandY = landmarks[16].y; // Y-coordinate of the right wrist\r\n  \r\n    // Calculate the average Y-coordinate of both hands to establish a \"floor\" level\r\n    const handsAverageY = (leftHandY + rightHandY) / 2;\r\n  \r\n    // Check if the chest Y-coordinate is at or below the average hand Y-coordinate\r\n    return chestY >= handsAverageY;\r\n  };\r\n\r\n  const calculateAngle = (A, B, C) => {\r\n    const AB = Math.sqrt(Math.pow(B.x - A.x, 2) + Math.pow(B.y - A.y, 2));\r\n    const BC = Math.sqrt(Math.pow(B.x - C.x, 2) + Math.pow(B.y - C.y, 2));\r\n    const AC = Math.sqrt(Math.pow(C.x - A.x, 2) + Math.pow(A.y - C.y, 2));\r\n    return Math.acos((BC * BC + AB * AB - AC * AC) / (2 * BC * AB)) * (180 / Math.PI);\r\n  };\r\n\r\n  const saveSessionData = () => {\r\n    if (pushUpCount > 0) {\r\n      db.collection(\"pushUpSessions\").add({\r\n        userEmail: user.email,\r\n        userId: user.uid,\r\n        pushUpCount: pushUpCount,\r\n        elbowStatus: elbowStatus,\r\n        bodyAngle: angle,\r\n        conditions: conditions,\r\n        createdAt: new Date()\r\n      })\r\n      .then(() => {\r\n        console.log(\"Session data successfully written!\");\r\n        setPushUpCount(0); // Reset count after saving\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error writing session data: \", error);\r\n      });\r\n    } else {\r\n      console.log(\"No user logged in or no push-ups counted\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ImageBackground\r\n            source={require('../../assets/BlackBackground.png')}\r\n            className=\"backgroundImage\"\r\n            resizeMode=\"cover\"\r\n        >\r\n    <div className=\"app-container\">\r\n      <div className=\"video-card\">\r\n        {isDetecting && <p>Detecting landmarks...</p>}\r\n        <video ref={videoRef} autoPlay className=\"video-stream\" />\r\n        <canvas ref={canvasRef} className=\"video-overlay\" />\r\n      </div>\r\n      <div className=\"info-card\">\r\n        <p>Push-Up Count: {pushUpCount}</p>\r\n        <p>Angle: {angle ? `${angle.toFixed(2)}°` : 'N/A'}</p>\r\n        <p>Body Position: {showWarning ? \"Body Not Straight\" : \"Body Straight\"}</p>\r\n        <p>Elbows: {elbowStatus}</p>\r\n        <button onClick={saveSessionData}>Save Session</button>\r\n      </div>\r\n    </div>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nexport default PushUpDetection;\r\n","import React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { Provider as PaperProvider, DefaultTheme } from 'react-native-paper';\r\nimport LoginPage from './Pages/LoginPage';\r\nimport HomePage from './Pages/HomePage';\r\nimport ProfilePage from \"./Pages/ProfilePage\";\r\nimport HistoryPage from \"./Pages/HistoryPage\";\r\nimport PoseDetection from \"./Pages/PoseDetection\";\r\nimport BrowsePage from './Pages/BrowsePage';\r\nimport SquatDetection from './Pages/Exercises/SquatDetection';\r\nimport PlankDetection from './Pages/Exercises/PlankDetection';\r\nimport JumpingJackDetection from './Pages/Exercises/JumpingJackDetection';\r\nimport PushUpDetection from './Pages/Exercises/PushUpDetection';\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst theme = {\r\n  ...DefaultTheme,\r\n  colors: {\r\n    ...DefaultTheme.colors,\r\n    primary: '#3498db',\r\n    accent: '#FF6347',\r\n    background: '#f0f0f0',\r\n    text: '#666',\r\n    disabled: 'gray',\r\n  },\r\n};\r\n\r\nconst TabNavigator = () => (\r\n  <Tab.Navigator screenOptions={{\r\n    tabBarActiveTintColor: '#3498db',\r\n    tabBarInactiveTintColor: 'gray',\r\n    tabBarLabelStyle: { fontSize: 12 },\r\n    tabBarStyle: { paddingBottom: 5, height: 60 },\r\n  }}>\r\n    <Tab.Screen name=\"Home\" component={HomePage} />\r\n    <Tab.Screen name=\"Profile\" component={ProfilePage} />\r\n    <Tab.Screen name=\"History\" component={HistoryPage} />\r\n    <Tab.Screen name=\"Scan\" component={PoseDetection} />\r\n    <Tab.Screen name=\"Browse\" component={BrowsePage} />\r\n  </Tab.Navigator>\r\n);\r\n\r\nexport default function App() {\r\n  return (\r\n    <PaperProvider theme={theme}>\r\n      <NavigationContainer>\r\n        <Stack.Navigator>\r\n          <Stack.Screen name=\"Login\" component={LoginPage} options={{ headerShown: false }} />\r\n          <Stack.Screen name=\"Home\" component={HomePage} options={{ headerShown: false }} />\r\n          <Stack.Screen name=\"SquatDetection\" component={SquatDetection} />\r\n          <Stack.Screen name=\"JumpingJackDetection\" component={JumpingJackDetection} />\r\n          <Stack.Screen name=\"PlankDetection\" component={PlankDetection} />\r\n          <Stack.Screen name=\"PushUpDetection\" component={PushUpDetection} />\r\n          \r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    </PaperProvider>\r\n  );\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [432], () => (__webpack_require__(2954)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","sanitizeInput","input","replace","loginAttempts","lastLoginAttemptTime","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","loginError","setLoginError","_useState7","_useState8","showLogin","setShowLogin","navigation","useNavigation","useEffect","onAuthStateChanged","user","emailVerified","navigate","handleEnter","_jsx","ImageBackground","source","require","style","styles","backgroundImage","resizeMode","children","KeyboardAvoidingView","container","behavior","_jsxs","View","inputContainer","TextInput","placeholder","value","onChangeText","secureTextEntry","Text","errorText","buttonContainer","TouchableOpacity","onPress","sanitizedEmail","sanitizedPassword","Date","now","intervalId","setInterval","remainingTime","Math","ceil","clearInterval","signInWithEmailAndPassword","then","userCredentials","console","log","catch","error","message","button","buttonText","hasUpperCase","test","hasLowerCase","hasNumbers","hasSpecialChars","length","createUserWithEmailAndPassword","sendEmailVerification","alert","welcomeContainer","imageButton","Image","HomePageLogo","logo","StyleSheet","create","flex","width","height","justifyContent","alignItems","padding","borderRadius","marginBottom","welcomeText","fontSize","color","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","enterButton","backgroundColor","flexDirection","fontFamily","textShadowColor","textShadowOffset","textShadowRadius","marginTop","searchInput","margin","borderWidth","itemContainer","marginVertical","marginHorizontal","itemName","itemDetails","itemImage","suggestionsContainer","paddingHorizontal","suggestionButton","paddingVertical","suggestionText","centeredView","modalView","modalImage","modalText","textAlign","_selectedExercise$ins","searchQuery","setSearchQuery","searchResults","setSearchResults","selectedExercise","setSelectedExercise","fetchExercises","_ref","_asyncToGenerator","bodyPart","arguments","undefined","url","response","fetch","method","headers","ok","Error","status","result","json","Alert","apply","handleCloseModal","className","Button","title","FlatList","horizontal","data","renderItem","_ref3","item","keyExtractor","index","toString","contentContainerStyle","_ref2","_item$instructions","exercise","uri","gifUrl","name","equipment","numberOfLines","instructions","join","id","Modal","animationType","transparent","visible","onRequestClose","_Fragment","modalTitle","target","titleContainer","titleText","fontWeight","emailText","progressBar","totalText","chart","_auth$currentUser","setProgress","totalSquats","setTotalSquats","totalJumpingJacks","setTotalJumpingJacks","totalPushUps","setTotalPushUps","_useState9","_useState10","totalPlanks","setTotalPlanks","_useState11","_useState12","loggedIn","setLoggedIn","progressInterval","prevProgress","fetchWorkoutTotals","collectionName","setter","countField","currentUser","userEmail","toLowerCase","ref","collection","q","query","where","querySnapshot","getDocs","total","forEach","doc","_x","_x2","_x3","authListener","labels","datasets","BarChart","yAxisSuffix","chartConfig","backgroundGradientFrom","backgroundGradientTo","strokeWidth","barPercentage","useShadowColorFromDataset","header","cardContainer","flexWrap","card","image","aspectRatio","Dimensions","get","screenWidth","setScreenWidth","updateLayout","addEventListener","removeEventListener","cardWidth","ScrollView","SquatLogo","PushUp","JumpingJack","Plank","workouts","setWorkouts","loading","setLoading","unsubscribe","fetchWorkouts","emailToQuery","trim","fetchFromCollection","docs","map","_objectSpread","type","createdAt","seconds","_yield$Promise$all","Promise","all","_yield$Promise$all2","squatSessions","jumpingJackSessions","pushupSessions","plankSessions","workoutsData","concat","_toConsumableArray","sort","a","b","cardStyle","boxShadow","transition","overflowY","display","gap","workout","toLocaleString","Tab","createBottomTabNavigator","SettingsScreen","scrollContainer","CollapsibleSection","description","horizontalContainer","signOut","isOpen","setIsOpen","sectionContainer","sectionHeader","sectionTitle","sectionContent","flexGrow","isEmailVerified","setIsEmailVerified","setRerender","prevState","isUserLoggedIn","Navigator","screenOptions","route","tabBarIcon","focused","iconName","size","Icon","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarLabelStyle","tabBarStyle","paddingBottom","Screen","component","ProfilePage","HistoryPage","PoseDetection","BrowsePage","setUser","poseLandmarker","setPoseLandmarker","isDetecting","setIsDetecting","angle","setAngle","showWarning","setShowWarning","videoRef","useRef","canvasRef","squatCount","setSquatCount","_useState13","_useState14","kneeWidthStatus","setKneeWidthStatus","_useState15","_useState16","lastSquatTime","setLastSquatTime","_useState17","_useState18","isInSquatPosition","setIsInSquatPosition","_useState19","headStraight","kneesShoulderWidthApart","squatDepthReached","_useState20","conditions","setConditions","uid","initPoseLandmarker","vision","FilesetResolver","forVisionTasks","PoseLandmarker","createFromOptions","baseOptions","modelAssetPath","delegate","runningMode","numPoses","close","video","current","canvas","ctx","getContext","predictWebcam","DrawingUtils","detect","drawingUtils","clearRect","landmarks","landmark","checkHeadStraight","kneesAreShoulderWidthApart","checkKneesShoulderWidthApart","squatDepthIsReached","checkSquatDepthReached","prevConditions","currentTime","getTime","prevCount","requestAnimationFrame","navigator","mediaDevices","getUserMedia","stream","srcObject","cancelAnimationFrame","animationFrameId","getTracks","track","stop","verticalAlignmentAngle","A","B","C","AB","sqrt","pow","x","y","BC","AC","acos","PI","calculateAngle","isOutOfLine","drawConnectors","POSE_CONNECTIONS","drawLandmarks","radius","from","lerp","z","shoulderWidth","kneeWidth","autoPlay","toFixed","onClick","add","userId","kneeStatus","headAngle","plankTime","setPlankTime","startTimeRef","bodyStraight","setBodyStraight","constraints","enableStream","play","bodyIsStraight","checkBodyStraight","duration","prevTime","shoulderHipLineAngle","isBodyNotStraight","bodyAngle","jumpingJackCount","setJumpingJackCount","feetPositionStatus","setFeetPositionStatus","armsRaised","feetApart","armsAreRaised","checkArmsRaised","feetAreApart","checkFeetApart","leftHandRaised","rightHandRaised","hipWidth","abs","feetStatus","pushUpCount","setPushUpCount","elbowStatus","setElbowStatus","elbowsTucked","chestNearFloor","elbowsAreTucked","checkElbowsTucked","chestIsNearFloor","checkChestNearFloor","bodyStraightnessAngle","Stack","createNativeStackNavigator","theme","DefaultTheme","colors","primary","accent","background","text","disabled","App","PaperProvider","NavigationContainer","LoginPage","options","headerShown","HomePage","SquatDetection","JumpingJackDetection","PlankDetection","PushUpDetection","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}